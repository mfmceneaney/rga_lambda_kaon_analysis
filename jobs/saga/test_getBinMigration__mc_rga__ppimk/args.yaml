baseoutpath: "out_" #NOTE: This will be prepended to the default output path like so: `<baseoutpath><binscheme_name>.csv`.
inpath: "/RGA_LAMBDA_KAON_ANALYSIS_VOL_DIR/jobs/c12analysis/mc_rga/*.root"
tree: "t"
nthreads: 8
cuts: "mass_ppim<1.24 && Q2>1 && W>2 && y<0.8 && xF_ppim<0.0 && xF_k>0.0 && (ppid_p_mc==3122 && pidx_p_mc==pidx_pim_mc && abs(dtheta_p)<6*TMath::Pi()/180.0 && abs(dtheta_pim)<6*TMath::Pi()/180.0 && abs(dtheta_k)<6*TMath::Pi()/180.0)" #NOTE: MAKE SURE YOU CUT FOR SIGNAL ONLY!
mc_cuts: "sqrt(px_e*px_e+py_e*py_e+pz_e*pz_e)>2.0 && vz_e>-25.0 && vz_e<20.0" #NOTE: This cut is preapplied on data skim but not in MC
particle_suffixes: ["_p","_pim","_k"]
var_formulas: #NOTE: Variable definitions will be applied in order in case of dependencies, and they should follow the form [variable_name,formula].
  - ["ptpt","(float)(phperp_k*phperp_ppim)"]
  - ["ptpt_mc","(float)(phperp_k_mc*phperp_ppim_mc)"]
  - ["dphi_h_k_ppim","(float)(phi_h_k-phi_h_ppim)"]
  - ["dphi_h_k_ppim_mc","(float)(phi_h_k_mc-phi_h_ppim_mc)"]
binschemes: #NOTE: Structure for bin schemes is { binscheme_name: { binvar_name: [binlimits] } }
binschemes_paths: ["/RGA_LAMBDA_KAON_ANALYSIS_HOME/yamls/out_1d_bins_ppimk.yaml"]
binvars: ["run","x","xF_ppim","zeta_ppim","xF_k","z_k","ptpt"] #NOTE: INCLUDE ALL VARIABLE NAMES AND LIMITS TO AUTOMATICALLY APPLY OVERALL LIMIT CUTS
binvar_lims: [[1,100],[0,1],[0,1],[0,1],[0,1],[0,1],[0,2.0]]
depolvars: []
depolvar_lims: []
asymfitvars: ["dphi_h_k_ppim"]
asymfitvar_lims: [[-6.28,6.28]]
massfitvars: ["mass_ppim"]
massfitvar_lims: [[1.08,1.24]]
mc_suffix: "_mc"
